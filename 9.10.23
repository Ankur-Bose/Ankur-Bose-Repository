#include<stdio.h>
#include<stdlib.h>
struct stack
{
	int size;
	int top;
	int *arr;
};

int empty(struct stack *s)
{
	if(s->top == -1)
	{
		return 0;
	}
	else
	{
		return 1;
	}
}

int isFull(struct stack *s)
{
	if(s->top==s->size-1)
	{
		return 0;
	}
	return 1;	
}

void push(struct stack *sp, int val)
{
	if(isFull(sp))
	{
		printf("Cannot push any item further");
	}
	else
	{
		sp->top++;
		sp->arr[sp->top]=val;
	}
}

int pop(struct stack *s)
{
	if(empty(s))
	{
		printf("Cannot pop");
		return 1;
	}
	else
	{
		int val=s->arr[s->top];
		s->top--;
		return val;
	}
}

int peek(struct stack* sp,int i)
{
	int arrayIndex=sp->top -i+1;
	if(arrayIndex<0)
	{
		printf("Not a valid pos\n");
		return 1;
	}
	else
	{
		return sp->arr[arrayIndex];
	}
}
int main()
{
	struct stack s;
	s.size=5;
	s.top=-1;
	s.arr=(int*)malloc(s.size*sizeof(int));
	int check=isFull(&s);
	if(check==0)
	printf("Full");
	else
	printf("Not Full");
	push(&s,5);
	push(&s,10);
	peek(&s,s.top);
	return 0;
}
